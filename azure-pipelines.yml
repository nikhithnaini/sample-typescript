# Node.js CI/CD Pipeline for Azure App Service using Managed Identity

trigger:
  branches:
    include:
      - main  # Runs pipeline on main branch commits

variables:
  ACR_NAME: "typescriptimage"  # Azure Container Registry name
  IMAGE_NAME: "my-app"
  TAG: "latest"  # Unique build identifier
  RESOURCE_GROUP: "linux-agent_group"
  MANAGED_IDENTITY_NAME: "a717f3e4-b10b-4a70-b565-a471734765b7"  # User Assigned Managed Identity Client ID
  APP_NAME: "typescript"  # Replace with your Azure App Service name

stages:
# ✅ **Stage 1: Build and Push Docker Image**
- stage: BuildAndPush
  displayName: "Build & Push Docker Image"
  jobs:
  - job: BuildAndPushImage
    pool:
      name: linux-agent  # Ensure the agent has Docker installed
    steps:

    # ✅ Authenticate to ACR using Managed Identity (No Secrets)
    - script: |
        az login --identity --client-id $(MANAGED_IDENTITY_NAME)
        az acr login --name $(ACR_NAME)
      displayName: "Login to ACR with Managed Identity"

    # ✅ Build the Docker Image
    - script: |
        docker build -t $(ACR_NAME).azurecr.io/$(IMAGE_NAME):$(TAG) .
      displayName: "Build Docker Image"

    # ✅ Push the Image to ACR
    - script: |
        docker push $(ACR_NAME).azurecr.io/$(IMAGE_NAME):$(TAG)
      displayName: "Push Image to ACR"

    # ✅ Show Pushed Image
    - script: |
        az acr repository show-tags --name $(ACR_NAME) --repository $(IMAGE_NAME)
      displayName: "Verify Image in ACR"

# ✅ **Stage 2: Deploy Container to Azure App Service**
- stage: Deploy
  displayName: "Deploy to Azure App Service"
  jobs:
  - job: DeployContainer
    pool: linux-agent
      

    steps:
    # ✅ Authenticate using Managed Identity
    - script: |
            az login --identity --client-id $(MANAGED_IDENTITY_NAME) --allow-no-subscriptions
      displayName: "Login using Managed Identity"

    

    # ✅ Deploy container to Azure App Service
    - script: |
        az webapp config container set --name $(APP_NAME) \
              --resource-group $(RESOURCE_GROUP) \
              --container-image-name $(ACR_NAME).azurecr.io/$(IMAGE_NAME):$(TAG) \
              --container-registry-url https://$(ACR_NAME).azurecr.io
      displayName: "Deploy Container to App Service"

    # ✅ Set application settings (Expose Port 5000)
    - script: |
        az webapp config appsettings set --name $(APP_NAME) --resource-group $(RESOURCE_GROUP) \
          --settings WEBSITES_PORT=5000
      displayName: "Set Port to 5000"

    # ✅ Restart App Service to apply changes
    - script: |
        az webapp restart --name $(APP_NAME) --resource-group $(RESOURCE_GROUP)
      displayName: "Restart App Service"
